function sharedbuffer(e,t,n){const s=6*4,o=n.BYTES_PER_ELEMENT,i=new SharedArrayBuffer(e*o*t+s);return i}function ringbuffer(e,t,n,s){const w=6*4,h=new Uint32Array(e,0,1),c=new Uint32Array(e,4,1),f=new Uint32Array(e,8,1),g=new Uint32Array(e,12,1),p=new Uint32Array(e,16,1),l=new Uint32Array(e,20,1),u=new s(e,w,n*t),o=()=>Atomics.load(h,0),r=()=>Atomics.load(c,0),m=()=>Atomics.load(f,0),d=()=>Atomics.load(g,0),i=()=>Atomics.load(p,0),j=()=>Atomics.load(l,0)===1,a=e=>e()*t,v=e=>{let t=e();return t==n-1?0:t+1},y=()=>o()-r(),_=e=>{const n=a(d);for(let s=0;s<t;s++)u[n+s]=e[s];if(n===0&&Atomics.store(l,0,1),j()&&a(i)===n){Atomics.store(l,0,0);const e=m()+(o()-r());Atomics.store(f,0,e),Atomics.store(c,0,o())}return Atomics.add(h,0,1),Atomics.store(g,0,v(d)),!0},b=()=>{if(o()-r()===0)return;const e=[];let n=a(i);for(let s=0;s<t;s++)e.push(u[n+s]);return Atomics.add(c,0,1),Atomics.store(p,0,v(i)),e};return{sab:e,push:_,pop:b,dropped_count:m,count:y}}typeof module!="undefined"&&(module.exports={ringbuffer,sharedbuffer});let buf=null;registerProcessor("AudioSender",class AudioSender extends AudioWorkletProcessor{constructor(){super(),this.port.onmessage=async e=>{let t=e.data;buf=ringbuffer(t.pcmSab,t.pcmBufOpts.size,t.pcmBufOpts.max,Float32Array)}}process(e){if(buf){let t=e[0][0];buf.push(t)}return!0}})